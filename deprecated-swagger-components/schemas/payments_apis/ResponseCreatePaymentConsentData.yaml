type: object
description: Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.
required:
  - consentId
  - statusUpdateDateTime
  - creationDateTime
  - expirationDateTime
  - status
  - loggedUser
  - creditor
  - payment
properties:
  consentId:
    type: string
    maxLength: 256
    pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9\-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
    example: urn:bancoex:C1DD33123
    description: |
      Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.
      Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource
      Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN
      seja um identificador de recurso persistente e independente da localização.
      Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:
      - o namespace(urn)
      - o identificador associado ao namespace da instituição transnmissora (bancoex)
      - o identificador específico dentro do namespace (C1DD33123).
      Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
  creationDateTime:
    description: 'Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).'
    type: 'string'
    format: 'date-time'
    example: '2021-05-21T08:30:00Z'
    pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
    maxLength: 20
  expirationDateTime:
    description: |
      Data e hora em que o consentimento da iniciação de pagamento expira, devendo ser sempre o creationDateTime mais 5 minutos. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC (UTC time format).
      O consentimento é criado com o status AWAITING_AUTHORISATION, e deve assumir o status AUTHORIZED ou REJECTED antes do tempo de expiração - 5 minutos. Caso o tempo seja expirado, o status deve assumir REJECTED.
      Para o cenário em que o status assumiu AUTHORISED, o tempo máximo do expirationDateTime do consentimento deve assumir "now + 60 minutos". Este é o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. Não é possível prorrogar este tempo e a criação de um novo consentimento será necessária para os cenários de insucesso.
      O tempo do expirationDateTime é garantido com os 15 minutos do access token, sendo possível utilizar mais três refresh tokens até totalizar 60 minutos.
    type: 'string'
    format: 'date-time'
    example: '2021-05-21T08:30:00Z'
    pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
    maxLength: 20
  statusUpdateDateTime:
    type: string
    format: date-time
    example: '2021-05-21T08:30:00Z'
    pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$
    maxLength: 20
    description: |
      Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).
  status:
    $ref: '../enum/EnumAuthorisationStatusType.yaml'
  loggedUser:
    $ref: ./LoggedUser.yaml
  businessEntity:
    $ref: ./BusinessEntity.yaml
  creditor:
    $ref: ../payments_apis/PaymentIdentification.yaml
  payment:
    type: object
    description: Objeto contendo dados de pagamento para consentimento.
    required:
      - type
      - currency
      - amount
      - details
    properties:
      type:
        $ref: '../enum/EnumPaymentType.yaml'
      schedule:
        oneOf: 
          - $ref: './Schedule.yaml'
      date:
        type: string
        format: date
        maxLength: 10
        pattern: ^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$
        example: '2021-01-01'
        description: |
          [Restrição] Mutuamente excludente com o objeto schedule. 

          Este campo é obrigatório no caso de pagamento único. 
          
          Neste caso, o objeto schedule não deve ser informado.
      currency:
        type: string
        maxLength: 3
        pattern: ^([A-Z]{3})$
        example: BRL
        description: |
          Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.
          Todos os valores monetários informados estão representados com a moeda vigente do Brasil.
      amount:
        type: string
        minLength: 4
        maxLength: 19
        pattern: ^((\d{1,16}\.\d{2}))$
        example: '100000.12'
        description: |
          Valor da transação com 2 casas decimais. O valor deve ser o mesmo enviado no consentimento. 

          Para QR Code estático com valor pré-determinado no QR Code ou para QR Code dinâmico com indicação de que o valor não pode ser alterado: O campo amount deve ser preenchido com o valor estabelecido no QR Code. 
          Caso seja preenchido com valor divergente do QR Code, deve ser retornado um erro HTTP Status 422.
      ibgeTownCode:
        type: string
        minLength: 7
        maxLength: 7
        pattern: ^\d{7}$
        example: '5300108'
        description: |
          O campo ibgetowncode no arranjo PIX, tem o mesmo comportamento que o campo codMun descrito no item 1.6.6 do manual do PIX, conforme segue:

          1. Caso a informação referente ao município não seja enviada; o PSP do recebedor assumirá que não existem feriados estaduais e municipais no período em questão;
      details:
        $ref: ./PaymentDetails.yaml
  debtorAccount:
    $ref: ../business_commons/DebtorAccount.yaml
